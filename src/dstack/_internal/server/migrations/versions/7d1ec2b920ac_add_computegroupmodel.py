"""Add ComputeGroupModel

Revision ID: 7d1ec2b920ac
Revises: ff1d94f65b08
Create Date: 2025-10-21 16:01:23.739395

"""

import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op

import dstack._internal.server.models

# revision identifiers, used by Alembic.
revision = "7d1ec2b920ac"
down_revision = "ff1d94f65b08"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "compute_groups",
        sa.Column("id", sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
        sa.Column(
            "project_id", sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False
        ),
        sa.Column("fleet_id", sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
        sa.Column("created_at", dstack._internal.server.models.NaiveDateTime(), nullable=False),
        sa.Column("status", sa.String(length=100), nullable=False),
        sa.Column(
            "last_processed_at", dstack._internal.server.models.NaiveDateTime(), nullable=False
        ),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.Column("deleted_at", dstack._internal.server.models.NaiveDateTime(), nullable=True),
        sa.Column("provisioning_data", sa.Text(), nullable=False),
        sa.Column(
            "first_termination_retry_at",
            dstack._internal.server.models.NaiveDateTime(),
            nullable=True,
        ),
        sa.Column(
            "last_termination_retry_at",
            dstack._internal.server.models.NaiveDateTime(),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["fleet_id"], ["fleets.id"], name=op.f("fk_compute_groups_fleet_id_fleets")
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
            name=op.f("fk_compute_groups_project_id_projects"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_compute_groups")),
    )
    with op.batch_alter_table("instances", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "compute_group_id",
                sqlalchemy_utils.types.uuid.UUIDType(binary=False),
                nullable=True,
            )
        )
        batch_op.create_foreign_key(
            batch_op.f("fk_instances_compute_group_id_compute_groups"),
            "compute_groups",
            ["compute_group_id"],
            ["id"],
        )

    with op.batch_alter_table("jobs", schema=None) as batch_op:
        batch_op.add_column(sa.Column("waiting_master_job", sa.Boolean(), nullable=True))

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("jobs", schema=None) as batch_op:
        batch_op.drop_column("waiting_master_job")

    with op.batch_alter_table("instances", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("fk_instances_compute_group_id_compute_groups"), type_="foreignkey"
        )
        batch_op.drop_column("compute_group_id")

    op.drop_table("compute_groups")
    # ### end Alembic commands ###
